import os, base64
from cryptography.hazmat.primitives.ciphers.aead import AESGCM

# 1) Gerar chave
key = AESGCM.generate_key(bit_length=256) # 256 bits

aesgcm = AESGCM(key)

# 2) Nonce
# Usado para gerar valores diferentes para para cada cifragem
nonce = os.urandom(12)  # 96 bits

dados = "Essa mensagem vai ser cifrada com AES".encode("utf-8")

# Associated_data -> cabe√ßalho para adicionar mais uma cama de criptografia
# Opcional
aad = None

# 4) Cifrar
ciphertext = aesgcm.encrypt(nonce, dados, aad)

print("Key:", base64.b64encode(key).decode())
print("Nonce:", base64.b64encode(nonce).decode())
print("Texto cifrado:", base64.b64encode(ciphertext).decode())

# 5) Decifrar
decrypted = aesgcm.decrypt(nonce, ciphertext, aad)
print("Texto decifrado:", decrypted.decode("utf-8"))